##
## Standard DRAGON histograms for the rootana analyzer.
##
## EXAMPLE COMMAND ##
## Creates a 2d polygon cut ##
# CMD:
#       TCutG cutg("cutTest",7);
# 	cutg.SetVarX("");
# 	cutg.SetVarY("");
# 	cutg.SetTitle("Graph");
# 	cutg.SetFillColor(1);
# 	cutg.SetPoint(0,37.8544,70.113);
# 	cutg.SetPoint(1,25.5939,41.5819);
# 	cutg.SetPoint(2,54.9042,28.0226);
# 	cutg.SetPoint(3,83.0651,35.3672);
# 	cutg.SetPoint(4,81.5326,53.1638);
# 	cutg.SetPoint(5,59.3103,79.1525);
# 	cutg.SetPoint(6,37.8544,70.113);
# END:


## BGO SINGLES ##
DIR:
histos/event/gamma/bgo

TH1D:
	("bgoZ", "Bgo Z position;z0 [mm];Counts",100, -200, 200)
	rootana::gHead.bgo.z0

SUMMARY:
 	("bgoE", "Bgo chan vs. Energy;Energy [keV/10];Detector Number", 256, 0, 4096)
 	rootana::gHead.bgo.ecal
	30

TH1D:
	("bgo0", "BGO_{0} Channel;BGO;Counts", 30, 0, 30)
	rootana::gHead.bgo.hit0
CUT:
	Greater(rootana::gHead.bgo.esort[0], 0)

TH2D:
	("bgoE0", "BGO_{0} Channel vs. Energy;Energy [keV/10];Detector Number", 200, 0, 10, 30, 0, 30)
	rootana::gHead.bgo.esort[0]
	rootana::gHead.bgo.hit0
CUT:
	Greater(rootana::gHead.bgo.esort[0], 0)

TH2D:
	("bgoE0E1", "BGO_{1} vs. BGO_{0};E0 [keV/10];E1 [keV/10]", 200, 0, 10, 200, 0, 10)
	rootana::gHead.bgo.esort[0]
	rootana::gHead.bgo.esort[1]
CUT:
	Greater(rootana::gHead.bgo.esort[1], 0)


## DSSSD SINGLES ##
DIR:
histos/event/hion/dsssd

SUMMARY:
	("dsssdE", "DSSSD channel vs. Energy;Energy [keV];Channel", 200, 0, 20000)
	rootana::gTail.dsssd.ecal
	32

TH1D:
	("dsssdT", "DSSSD time;TDC [arb.];Counts", 200, 0, 20000)
	rootana::gTail.dsssd.tcal

TH2D:
        ("dsssdEfront_mcpTAC", "DSSSD Efront vs. MCP TAC", 256, 0, 4096, 200, 0, 20000)
	rootana::gTail.mcp.tac
	rootana::gTail.dsssd.efront
CUT:
        Greater(rootana::gTail.mcp.tac, 0) && Greater(rootana::gTail.dsssd.efront, 0)

TH2D:
        ("dsssdEback_mcpTAC", "DSSSD Eback vs. MCP TAC", 256, 0, 4096, 200, 0, 20000)
	rootana::gTail.mcp.tac
	rootana::gTail.dsssd.eback
CUT:
	Greater(rootana::gTail.mcp.tac, 0) && Greater(rootana::gTail.dsssd.eback, 0)


## IC SINGLES ##
DIR:
histos/event/hion/ic

SUMMARY:
	("icAnode", "IC channel vs. anode;Anode [ch];Channel", 256, 0, 4096)
	rootana::gTail.ic.anode
	4

TH1D:
	("icSum", "IC anode sum;Sum [arb];Counts", 200, 0, 20000)
	rootana::gTail.ic.sum

TH2D:
        ("ic0_1", "IC anode 0 vs. anode 1;Anode 0 [arb.];Anode 1 [arb.]", 256, 0, 4096, 256, 0, 4096)
	rootana::gTail.ic.anode[0]
	rootana::gTail.ic.anode[1]
CUT:
        Greater(rootana::gTail.ic.anode[0], 0) && Greater(rootana::gTail.ic.anode[1], 0)

TH1D:
	("icT", "IC time;TDC [arb.];Counts", 200, 0, 20000)
	rootana::gTail.ic.tcal

TH2D:
        ("icSum_mcpTAC", "IC anode sum vs. MCP TAC", 256, 0, 4096, 200, 0, 20000)
	rootana::gTail.mcp.tac
	rootana::gTail.ic.sum
CUT:
        Greater(rootana::gTail.mcp.tac, 0) && Greater(rootana::gTail.ic.sum, 0)


## MCP SINGLES ##
DIR:
histos/event/hion/mcp

TH1D:
        ("mcpSum", "Sum of MCP anodes;Esum [arb.];Counts", 250, 0, 50000)
	rootana::gTail.mcp.esum
CUT:
        Greater(rootana::gTail.mcp.esum, 0)

SUMMARY:
        ("mcpAnode", "MCP channel vs. anode signal;Anode [channel];Channel", 256, 0, 4096)
	rootana::gTail.mcp.anode
	4

TH2D:
        ("mcpXY", "MCP x vs. y;xpos [arb.];ypos [arb.]", 60,-30,30,60,-30,30)
	rootana::gTail.mcp.x
	rootana::gTail.mcp.y

CUT:
        IsValid(rootana::gTail.mcp.x) && IsValid(rootana::gTail.mcp.y)

TH1D:
        ("mcpTOF", "MCP TAC signal;TAC [channel];Counts", 256, 0, 4096)
	rootana::gTail.mcp.tac
CUT:
        Greater(rootana::gTail.mcp.tac, 0)


## SURFACE BARRIER SINGLES ##
DIR:
histos/event/hion/sb

TH1D:
        ("sbE0", "Surface barrier energy, ch. 0;Energy [channel];Counts", 256, 0, 4096)
	rootana::gTail.sb.ecal[0]
CUT:
	Greater(rootana::gTail.sb.ecal[0], 0)
	
TH1D:
        ("sbE1", "Surface barrier energy, ch. 1;Energy [channel];Counts", 256, 0, 4096)
	rootana::gTail.sb.ecal[1]
CUT:
	Greater(rootana::gTail.sb.ecal[1], 0)


## NAI + GE SINGLES ##
DIR:
histos/event/hion/aux

TH1D:
        ("naiE0", "NaI energy, ch. 0;Energy [channel];Counts", 256, 0, 4096)
	rootana::gTail.nai.ecal[0]
CUT:
	Greater(rootana::gTail.nai.ecal[0], 0)
	
TH1D:
        ("naiE1", "NaI energy, ch. 1;Energy [channel];Counts", 256, 0, 4096)
	rootana::gTail.nai.ecal[1]
CUT:
	Greater(rootana::gTail.nai.ecal[1], 0)

TH1D:
        ("geE", "HPGe energy;Energy [channel];Counts", 256, 0, 4096)
	rootana::gTail.ge.ecal
CUT:
	Greater(rootana::gTail.ge.ecal, 0)



## BGO COINC ##
DIR:
histos/event/coinc/bgo

TH1D:
	("bgoZ", "Bgo Z position;z0 [mm];Counts", 100, -200, 200)
	rootana::gCoinc.head.bgo.z0

SUMMARY:
 	("bgoE", "Bgo chan vs. Energy;Energy [keV/10];Detector Number", 200, 0, 10)
 	rootana::gCoinc.head.bgo.ecal
	30

TH1D:
	("bgo0", "BGO_{0} Channel;BGO;Counts", 30, 0, 30)
	rootana::gCoinc.head.bgo.hit0
CUT:
	Greater(rootana::gCoinc.head.bgo.hit0, 0)

TH2D:
	("bgoE0", "BGO_{0} Channel vs. Energy;Energy [keV/10];Detector Number", 200, 0, 10, 30, 0, 30)
	rootana::gCoinc.head.bgo.esort[0]
	rootana::gCoinc.head.bgo.hit0
CUT:
	Greater(rootana::gCoinc.head.bgo.esort[0], 0)

TH2D:
	("bgoE0E1", "BGO_{1} vs. BGO_{0};E0 [keV/10];E1 [keV/10]", 200, 0, 10, 200, 0, 10)
	rootana::gCoinc.head.bgo.esort[0]
	rootana::gCoinc.head.bgo.esort[1]
CUT:
	Greater(rootana::gCoinc.head.bgo.esort[1], 0)


## DSSSD COINC ##
DIR:
histos/event/coinc/dsssd

SUMMARY:
	("dsssdE", "DSSSD channel vs. Energy;Energy [keV];Channel", 200, 0, 20000)
	rootana::gCoinc.tail.dsssd.ecal
	32

TH1D:
	("dsssdT", "DSSSD time;TDC [arb.];Counts", 200, 0, 20000)
	rootana::gCoinc.tail.dsssd.tcal

TH2D:
        ("dsssdEfront_mcpTAC", "DSSSD Efront vs. MCP TAC", 256, 0, 4096, 200, 0, 20000)
	rootana::gCoinc.tail.mcp.tac
	rootana::gCoinc.tail.dsssd.efront
CUT:
        Greater(rootana::gCoinc.tail.mcp.tac, 0) && Greater(rootana::gCoinc.tail.dsssd.efront, 0)

TH2D:
        ("dsssdEback_mcpTAC", "DSSSD Eback vs. MCP TAC", 256, 0, 4096, 200, 0, 20000)
	rootana::gCoinc.tail.mcp.tac
	rootana::gCoinc.tail.dsssd.eback
CUT:
	Greater(rootana::gCoinc.tail.mcp.tac, 0) && Greater(rootana::gCoinc.tail.dsssd.eback, 0)


## IC COINC ##
DIR:
histos/event/coinc/ic

SUMMARY:
	("dsssdE", "IC channel vs. anode;Anode [ch];Channel", 256, 0, 4096)
	rootana::gCoinc.tail.ic.anode
	4

TH1D:
	("icSum", "IC anode sum;Sum [arb];Counts", 200, 0, 20000)
	rootana::gCoinc.tail.ic.sum

TH2D:
        ("ic0_1", "IC anode 0 vs. anode 1;Anode 0 [arb.];Anode 1 [arb.]", 256, 0, 4096, 256, 0, 4096)
	rootana::gCoinc.tail.ic.anode[0]
	rootana::gCoinc.tail.ic.anode[1]
CUT:
        Greater(rootana::gCoinc.tail.ic.anode[0], 0) && Greater(rootana::gCoinc.tail.ic.anode[1], 0)

TH1D:
	("icT", "IC time;TDC [arb.];Counts", 200, 0, 20000)
	rootana::gCoinc.tail.ic.tcal

TH2D:
        ("icSum_mcpTAC", "IC anode sum vs. MCP TAC", 256, 0, 4096, 200, 0, 20000)
	rootana::gCoinc.tail.mcp.tac
	rootana::gCoinc.tail.ic.sum
CUT:
        Greater(rootana::gCoinc.tail.mcp.tac, 0) && Greater(rootana::gCoinc.tail.ic.sum, 0)


## MCP COINC ##
DIR:
histos/event/coinc/mcp

TH1D:
        ("mcpEsum", "Sum of MCP anodes;Esum [arb.];Counts", 250, 0, 50000)
	rootana::gCoinc.tail.mcp.esum
CUT:
        Greater(rootana::gCoinc.tail.mcp.esum, 0)

SUMMARY:
        ("mcpAnode", "MCP channel vs. anode signal;Anode [channel];Channel", 256, 0, 4096)
	rootana::gCoinc.tail.mcp.anode
	4

TH2D:
        ("mcpXY", "MCP x vs. y;xpos [arb.];ypos [arb.]", 60,-30,30,60,-30,30)
	rootana::gCoinc.tail.mcp.x
	rootana::gCoinc.tail.mcp.y

CUT:
        IsValid(rootana::gCoinc.tail.mcp.x) && IsValid(rootana::gCoinc.tail.mcp.y)

TH1D:
        ("mcpTOF", "MCP TAC signal;TAC [channel];Counts", 256, 0, 4096)
	rootana::gCoinc.tail.mcp.tac
CUT:
        Greater(rootana::gCoinc.tail.mcp.tac, 0)


## SURFACE BARRIER COINC ##
DIR:
histos/event/coinc/sb

TH1D:
        ("sbE0", "Surface barrier energy, ch. 0;Energy [channel];Counts", 256, 0, 4096)
	rootana::gCoinc.tail.sb.ecal[0]
CUT:
	Greater(rootana::gCoinc.tail.sb.ecal[0], 0)
	
TH1D:
        ("sbE1", "Surface barrier energy, ch. 1;Energy [channel];Counts", 256, 0, 4096)
	rootana::gCoinc.tail.sb.ecal[1]
CUT:
	Greater(rootana::gCoinc.tail.sb.ecal[1], 0)


## NAI COINC ##
DIR:
histos/event/coinc/nai

TH1D:
        ("naiE0", "NaI energy, ch. 0;Energy [channel];Counts", 256, 0, 4096)
	rootana::gCoinc.tail.nai.ecal[0]
CUT:
	Greater(rootana::gCoinc.tail.nai.ecal[0], 0)
	
TH1D:
        ("naiE1", "NaI energy, ch. 1;Energy [channel];Counts", 256, 0, 4096)
	rootana::gCoinc.tail.nai.ecal[1]
CUT:
	Greater(rootana::gCoinc.tail.nai.ecal[1], 0)


## GE COINC ##
DIR:
histos/event/coinc/ge

TH1D:
        ("geE", "HPGe energy;Energy [channel];Counts", 256, 0, 4096)
	rootana::gCoinc.tail.ge.ecal
CUT:
	Greater(rootana::gCoinc.tail.ge.ecal, 0)


## Crossover TOF ##
# DIR:
# histos/event/xtof

# TH1D:
#         ("xtof_head", "Crossover TOF (bgo->tail trig., measured by head TDC);ToF [arb.];Counts", 500, 0, 10000)
# 	rootana::gCoinc.head.tof.gamma_tail
# CUT:
#         IsValid(rootana::gCoinc.head.tof.gamma_tail)

# TH1D:
#         ("gamma_ic", "Crossover TOF (BGO->ic, measured by tail TDC);ToF [arb.];Counts", 500, 0, 10000)
# 	rootana::gCoinc.tail.tof.gamma_ic
# CUT:
#         IsValid(rootana::gCoinc.tail.tof.gamma_ic)

# TH1D:
#         ("gamma_dsssd", "Crossover TOF (BGO->dsssd, measured by tail TDC);ToF [arb.];Counts", 500, 0, 10000)
# 	rootana::gCoinc.tail.tof.gamma_dsssd
# CUT:
#         IsValid(rootana::gCoinc.tail.tof.gamma_dsssd)


DIR:
histos/event/tstamp/diagnostics


TH1D:
	("time_diff", "trig_time - earliest in queue [us]", 1000, 0, 20e6)
	rootana::gDiagnostics.time_diff;

TH1D:
	("coinc_rate", "Coincidence Rate;rate [/sec];Counts", 500, 0, 1000)
	rootana::gDiagnostics.coinc_rate

	
## Head IO32
DIR:
histos/event/gamma/io32

TH1D:
       ("busy_time", "Head busy time;Busy time [ns/50];Counts", 1000, 0, 10000)
       rootana::gHead.io32.busy_time
       
TH1D:
       ("trigger_channel", "Head trigger channel;Channel;Counts", 8, 0, 8)
       rootana::gHead.io32.which_trigger
       
SCALER:
        ("trig_time", "tsc4 trigger time;Event; time [us]", 5000, 0, 5000)
        rootana::gHead.io32.tsc4.trig_time;


## Tail IO32
DIR:
histos/event/hion/io32

TH1D:
       ("busy_time", "Tail busy time; Busy time [ns/50];Counts", 1000, 0, 10000)
       rootana::gTail.io32.busy_time

TH1D:
       ("trigger_channel", "Tail trigger channel;Channel;Counts", 8, 0, 8)
       rootana::gTail.io32.which_trigger


## Coinc IO32
DIR:
histos/event/coinc/gamma/io32

TH1D:
       ("trigger_channel", "Head trigger channel;Channel;Counts", 8, 0, 8)
       rootana::gHead.io32.which_trigger

histos/event/coinc/hion/io32
TH1D:
       ("trigger_channel", "Tail trigger channel;Channel;Counts", 8, 0, 8)
       rootana::gTail.io32.which_trigger


## EPICS
DIR:
histos/event/epics

TH1D:
      ("value", "EPICS Chan 0", 200, 0, 10)
      rootana::gEpics.val
CUT:
      Equal(rootana::gEpics.ch, 0)
      

## Head Scalers ##
DIR:
histos/scaler/head

# for i in count rate sum;
# do for j in {0..16}; do
# echo "SCALER:"
# echo "        ((\"${i}_\" + gHeadScaler.channel_name(${j})).c_str(), (gHeadScaler.channel_name(${j})+ \" (${i})\").c_str(), 5000, 0, 5000)"
# echo "        rootana::gHeadScaler.${i}[${j}]"
# echo ""
# done; done

SCALER:
        (("count_" + gHeadScaler.channel_name(0)).c_str(), (gHeadScaler.channel_name(0)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[0]

SCALER:
        (("count_" + gHeadScaler.channel_name(1)).c_str(), (gHeadScaler.channel_name(1)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[1]

SCALER:
        (("count_" + gHeadScaler.channel_name(2)).c_str(), (gHeadScaler.channel_name(2)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[2]

SCALER:
        (("count_" + gHeadScaler.channel_name(3)).c_str(), (gHeadScaler.channel_name(3)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[3]

SCALER:
        (("count_" + gHeadScaler.channel_name(4)).c_str(), (gHeadScaler.channel_name(4)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[4]

SCALER:
        (("count_" + gHeadScaler.channel_name(5)).c_str(), (gHeadScaler.channel_name(5)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[5]

SCALER:
        (("count_" + gHeadScaler.channel_name(6)).c_str(), (gHeadScaler.channel_name(6)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[6]

SCALER:
        (("count_" + gHeadScaler.channel_name(7)).c_str(), (gHeadScaler.channel_name(7)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[7]

SCALER:
        (("count_" + gHeadScaler.channel_name(8)).c_str(), (gHeadScaler.channel_name(8)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[8]

SCALER:
        (("count_" + gHeadScaler.channel_name(9)).c_str(), (gHeadScaler.channel_name(9)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[9]

SCALER:
        (("count_" + gHeadScaler.channel_name(10)).c_str(), (gHeadScaler.channel_name(10)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[10]

SCALER:
        (("count_" + gHeadScaler.channel_name(11)).c_str(), (gHeadScaler.channel_name(11)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[11]

SCALER:
        (("count_" + gHeadScaler.channel_name(12)).c_str(), (gHeadScaler.channel_name(12)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[12]

SCALER:
        (("count_" + gHeadScaler.channel_name(13)).c_str(), (gHeadScaler.channel_name(13)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[13]

SCALER:
        (("count_" + gHeadScaler.channel_name(14)).c_str(), (gHeadScaler.channel_name(14)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[14]

SCALER:
        (("count_" + gHeadScaler.channel_name(15)).c_str(), (gHeadScaler.channel_name(15)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[15]

SCALER:
        (("count_" + gHeadScaler.channel_name(16)).c_str(), (gHeadScaler.channel_name(16)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.count[16]

SCALER:
        (("rate_" + gHeadScaler.channel_name(0)).c_str(), (gHeadScaler.channel_name(0)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[0]

SCALER:
        (("rate_" + gHeadScaler.channel_name(1)).c_str(), (gHeadScaler.channel_name(1)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[1]

SCALER:
        (("rate_" + gHeadScaler.channel_name(2)).c_str(), (gHeadScaler.channel_name(2)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[2]

SCALER:
        (("rate_" + gHeadScaler.channel_name(3)).c_str(), (gHeadScaler.channel_name(3)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[3]

SCALER:
        (("rate_" + gHeadScaler.channel_name(4)).c_str(), (gHeadScaler.channel_name(4)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[4]

SCALER:
        (("rate_" + gHeadScaler.channel_name(5)).c_str(), (gHeadScaler.channel_name(5)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[5]

SCALER:
        (("rate_" + gHeadScaler.channel_name(6)).c_str(), (gHeadScaler.channel_name(6)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[6]

SCALER:
        (("rate_" + gHeadScaler.channel_name(7)).c_str(), (gHeadScaler.channel_name(7)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[7]

SCALER:
        (("rate_" + gHeadScaler.channel_name(8)).c_str(), (gHeadScaler.channel_name(8)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[8]

SCALER:
        (("rate_" + gHeadScaler.channel_name(9)).c_str(), (gHeadScaler.channel_name(9)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[9]

SCALER:
        (("rate_" + gHeadScaler.channel_name(10)).c_str(), (gHeadScaler.channel_name(10)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[10]

SCALER:
        (("rate_" + gHeadScaler.channel_name(11)).c_str(), (gHeadScaler.channel_name(11)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[11]

SCALER:
        (("rate_" + gHeadScaler.channel_name(12)).c_str(), (gHeadScaler.channel_name(12)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[12]

SCALER:
        (("rate_" + gHeadScaler.channel_name(13)).c_str(), (gHeadScaler.channel_name(13)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[13]

SCALER:
        (("rate_" + gHeadScaler.channel_name(14)).c_str(), (gHeadScaler.channel_name(14)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[14]

SCALER:
        (("rate_" + gHeadScaler.channel_name(15)).c_str(), (gHeadScaler.channel_name(15)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[15]

SCALER:
        (("rate_" + gHeadScaler.channel_name(16)).c_str(), (gHeadScaler.channel_name(16)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.rate[16]

SCALER:
        (("sum_" + gHeadScaler.channel_name(0)).c_str(), (gHeadScaler.channel_name(0)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[0]

SCALER:
        (("sum_" + gHeadScaler.channel_name(1)).c_str(), (gHeadScaler.channel_name(1)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[1]

SCALER:
        (("sum_" + gHeadScaler.channel_name(2)).c_str(), (gHeadScaler.channel_name(2)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[2]

SCALER:
        (("sum_" + gHeadScaler.channel_name(3)).c_str(), (gHeadScaler.channel_name(3)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[3]

SCALER:
        (("sum_" + gHeadScaler.channel_name(4)).c_str(), (gHeadScaler.channel_name(4)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[4]

SCALER:
        (("sum_" + gHeadScaler.channel_name(5)).c_str(), (gHeadScaler.channel_name(5)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[5]

SCALER:
        (("sum_" + gHeadScaler.channel_name(6)).c_str(), (gHeadScaler.channel_name(6)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[6]

SCALER:
        (("sum_" + gHeadScaler.channel_name(7)).c_str(), (gHeadScaler.channel_name(7)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[7]

SCALER:
        (("sum_" + gHeadScaler.channel_name(8)).c_str(), (gHeadScaler.channel_name(8)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[8]

SCALER:
        (("sum_" + gHeadScaler.channel_name(9)).c_str(), (gHeadScaler.channel_name(9)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[9]

SCALER:
        (("sum_" + gHeadScaler.channel_name(10)).c_str(), (gHeadScaler.channel_name(10)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[10]

SCALER:
        (("sum_" + gHeadScaler.channel_name(11)).c_str(), (gHeadScaler.channel_name(11)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[11]

SCALER:
        (("sum_" + gHeadScaler.channel_name(12)).c_str(), (gHeadScaler.channel_name(12)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[12]

SCALER:
        (("sum_" + gHeadScaler.channel_name(13)).c_str(), (gHeadScaler.channel_name(13)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[13]

SCALER:
        (("sum_" + gHeadScaler.channel_name(14)).c_str(), (gHeadScaler.channel_name(14)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[14]

SCALER:
        (("sum_" + gHeadScaler.channel_name(15)).c_str(), (gHeadScaler.channel_name(15)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[15]

SCALER:
        (("sum_" + gHeadScaler.channel_name(16)).c_str(), (gHeadScaler.channel_name(16)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gHeadScaler.sum[16]


## Tail Scalers ##
DIR:
histos/scaler/tail

# for i in count rate sum;
# do for j in {0..16}; do
# echo "SCALER:"
# echo "        ((\"${i}_\" + gTailScaler.channel_name(${j})).c_str(), (gTailScaler.channel_name(${j})+ \" (${i})\").c_str(), 5000, 0, 5000)"
# echo "        rootana::gTailScaler.${i}[${j}]"
# echo ""
# done; done

SCALER:
        (("count_" + gTailScaler.channel_name(0)).c_str(), (gTailScaler.channel_name(0)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[0]

SCALER:
        (("count_" + gTailScaler.channel_name(1)).c_str(), (gTailScaler.channel_name(1)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[1]

SCALER:
        (("count_" + gTailScaler.channel_name(2)).c_str(), (gTailScaler.channel_name(2)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[2]

SCALER:
        (("count_" + gTailScaler.channel_name(3)).c_str(), (gTailScaler.channel_name(3)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[3]

SCALER:
        (("count_" + gTailScaler.channel_name(4)).c_str(), (gTailScaler.channel_name(4)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[4]

SCALER:
        (("count_" + gTailScaler.channel_name(5)).c_str(), (gTailScaler.channel_name(5)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[5]

SCALER:
        (("count_" + gTailScaler.channel_name(6)).c_str(), (gTailScaler.channel_name(6)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[6]

SCALER:
        (("count_" + gTailScaler.channel_name(7)).c_str(), (gTailScaler.channel_name(7)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[7]

SCALER:
        (("count_" + gTailScaler.channel_name(8)).c_str(), (gTailScaler.channel_name(8)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[8]

SCALER:
        (("count_" + gTailScaler.channel_name(9)).c_str(), (gTailScaler.channel_name(9)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[9]

SCALER:
        (("count_" + gTailScaler.channel_name(10)).c_str(), (gTailScaler.channel_name(10)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[10]

SCALER:
        (("count_" + gTailScaler.channel_name(11)).c_str(), (gTailScaler.channel_name(11)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[11]

SCALER:
        (("count_" + gTailScaler.channel_name(12)).c_str(), (gTailScaler.channel_name(12)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[12]

SCALER:
        (("count_" + gTailScaler.channel_name(13)).c_str(), (gTailScaler.channel_name(13)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[13]

SCALER:
        (("count_" + gTailScaler.channel_name(14)).c_str(), (gTailScaler.channel_name(14)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[14]

SCALER:
        (("count_" + gTailScaler.channel_name(15)).c_str(), (gTailScaler.channel_name(15)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[15]

SCALER:
        (("count_" + gTailScaler.channel_name(16)).c_str(), (gTailScaler.channel_name(16)+ " (count)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.count[16]

SCALER:
        (("rate_" + gTailScaler.channel_name(0)).c_str(), (gTailScaler.channel_name(0)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[0]

SCALER:
        (("rate_" + gTailScaler.channel_name(1)).c_str(), (gTailScaler.channel_name(1)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[1]

SCALER:
        (("rate_" + gTailScaler.channel_name(2)).c_str(), (gTailScaler.channel_name(2)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[2]

SCALER:
        (("rate_" + gTailScaler.channel_name(3)).c_str(), (gTailScaler.channel_name(3)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[3]

SCALER:
        (("rate_" + gTailScaler.channel_name(4)).c_str(), (gTailScaler.channel_name(4)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[4]

SCALER:
        (("rate_" + gTailScaler.channel_name(5)).c_str(), (gTailScaler.channel_name(5)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[5]

SCALER:
        (("rate_" + gTailScaler.channel_name(6)).c_str(), (gTailScaler.channel_name(6)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[6]

SCALER:
        (("rate_" + gTailScaler.channel_name(7)).c_str(), (gTailScaler.channel_name(7)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[7]

SCALER:
        (("rate_" + gTailScaler.channel_name(8)).c_str(), (gTailScaler.channel_name(8)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[8]

SCALER:
        (("rate_" + gTailScaler.channel_name(9)).c_str(), (gTailScaler.channel_name(9)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[9]

SCALER:
        (("rate_" + gTailScaler.channel_name(10)).c_str(), (gTailScaler.channel_name(10)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[10]

SCALER:
        (("rate_" + gTailScaler.channel_name(11)).c_str(), (gTailScaler.channel_name(11)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[11]

SCALER:
        (("rate_" + gTailScaler.channel_name(12)).c_str(), (gTailScaler.channel_name(12)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[12]

SCALER:
        (("rate_" + gTailScaler.channel_name(13)).c_str(), (gTailScaler.channel_name(13)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[13]

SCALER:
        (("rate_" + gTailScaler.channel_name(14)).c_str(), (gTailScaler.channel_name(14)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[14]

SCALER:
        (("rate_" + gTailScaler.channel_name(15)).c_str(), (gTailScaler.channel_name(15)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[15]

SCALER:
        (("rate_" + gTailScaler.channel_name(16)).c_str(), (gTailScaler.channel_name(16)+ " (rate)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.rate[16]

SCALER:
        (("sum_" + gTailScaler.channel_name(0)).c_str(), (gTailScaler.channel_name(0)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[0]

SCALER:
        (("sum_" + gTailScaler.channel_name(1)).c_str(), (gTailScaler.channel_name(1)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[1]

SCALER:
        (("sum_" + gTailScaler.channel_name(2)).c_str(), (gTailScaler.channel_name(2)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[2]

SCALER:
        (("sum_" + gTailScaler.channel_name(3)).c_str(), (gTailScaler.channel_name(3)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[3]

SCALER:
        (("sum_" + gTailScaler.channel_name(4)).c_str(), (gTailScaler.channel_name(4)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[4]

SCALER:
        (("sum_" + gTailScaler.channel_name(5)).c_str(), (gTailScaler.channel_name(5)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[5]

SCALER:
        (("sum_" + gTailScaler.channel_name(6)).c_str(), (gTailScaler.channel_name(6)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[6]

SCALER:
        (("sum_" + gTailScaler.channel_name(7)).c_str(), (gTailScaler.channel_name(7)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[7]

SCALER:
        (("sum_" + gTailScaler.channel_name(8)).c_str(), (gTailScaler.channel_name(8)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[8]

SCALER:
        (("sum_" + gTailScaler.channel_name(9)).c_str(), (gTailScaler.channel_name(9)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[9]

SCALER:
        (("sum_" + gTailScaler.channel_name(10)).c_str(), (gTailScaler.channel_name(10)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[10]

SCALER:
        (("sum_" + gTailScaler.channel_name(11)).c_str(), (gTailScaler.channel_name(11)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[11]

SCALER:
        (("sum_" + gTailScaler.channel_name(12)).c_str(), (gTailScaler.channel_name(12)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[12]

SCALER:
        (("sum_" + gTailScaler.channel_name(13)).c_str(), (gTailScaler.channel_name(13)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[13]

SCALER:
        (("sum_" + gTailScaler.channel_name(14)).c_str(), (gTailScaler.channel_name(14)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[14]

SCALER:
        (("sum_" + gTailScaler.channel_name(15)).c_str(), (gTailScaler.channel_name(15)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[15]

SCALER:
        (("sum_" + gTailScaler.channel_name(16)).c_str(), (gTailScaler.channel_name(16)+ " (sum)").c_str(), 5000, 0, 5000)
        rootana::gTailScaler.sum[16]

